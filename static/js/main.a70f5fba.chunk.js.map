{"version":3,"sources":["Navigator.js","Content.js","Header.js","Paperbase.js","index.js"],"names":["categories","id","children","icon","active","withStyles","theme","categoryHeader","paddingTop","spacing","paddingBottom","categoryHeaderPrimary","color","palette","common","white","item","backgroundColor","itemCategory","boxShadow","firebase","fontSize","itemActiveItem","itemPrimary","itemIcon","minWidth","marginRight","divider","marginTop","props","classes","other","Drawer","variant","List","disablePadding","ListItem","className","clsx","ListItemIcon","ListItemText","primary","map","Fragment","key","childId","button","Divider","sampleJob","name","newApplicantName","applicants","isHired","hired","paper","maxWidth","margin","overflow","searchBar","borderBottom","searchBarColor","background","borderRadius","searchInput","typography","block","display","addUser","contentWrapper","jobCard","React","useState","list","setList","jobName","setJobName","setChosenOne","hire","jobId","applicantNumber","jobApplicants","find","length","fetch","then","res","text","result","console","log","parseInt","error","luckyNumber","chosen","newList","applicant","index","applyChosenOne","Paper","AppBar","position","elevation","Toolbar","Grid","container","alignItems","xs","TextField","fullWidth","placeholder","InputProps","disableUnderline","value","onChange","event","target","Button","onClick","concat","uuidv4","Tooltip","title","IconButton","Card","CardContent","Typography","gutterBottom","e","handleApplicantNameChange","handleAddApplicant","aria-label","filter","handleRemoveApplicant","CardActions","handleRemoveJob","size","align","secondaryBar","zIndex","menuButton","marginLeft","iconButtonAvatar","padding","link","textDecoration","borderColor","onDrawerToggle","Hidden","smUp","Link","href","Avatar","src","alt","component","Tabs","textColor","Tab","label","Copyright","Date","getFullYear","createMuiTheme","light","main","dark","h5","fontWeight","letterSpacing","shape","MuiTab","disableRipple","mixins","toolbar","minHeight","overrides","MuiDrawer","MuiButton","textTransform","contained","MuiTabs","root","indicator","height","borderTopLeftRadius","borderTopRightRadius","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","fontWeightMedium","MuiListItemIcon","MuiAvatar","width","styles","drawer","flexShrink","app","flex","flexDirection","footer","mobileOpen","setMobileOpen","handleDrawerToggle","ThemeProvider","CssBaseline","implementation","PaperProps","style","open","onClose","xsDown","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a70f5fba.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PeopleIcon from '@material-ui/icons/People';\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\nimport PermMediaOutlinedIcon from '@material-ui/icons/PhotoSizeSelectActual';\nimport PublicIcon from '@material-ui/icons/Public';\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PhonelinkSetupIcon from '@material-ui/icons/PhonelinkSetup';\n\nconst categories = [\n  {\n    id: 'Develop',\n    children: [\n      {\n        id: 'Authentication',\n        icon: <PeopleIcon />,\n        active: true,\n      },\n      { id: 'Database', icon: <DnsRoundedIcon /> },\n      { id: 'Storage', icon: <PermMediaOutlinedIcon /> },\n      { id: 'Hosting', icon: <PublicIcon /> },\n      { id: 'Functions', icon: <SettingsEthernetIcon /> },\n      {\n        id: 'ML Kit',\n        icon: <SettingsInputComponentIcon />,\n      },\n    ],\n  },\n  {\n    id: 'Quality',\n    children: [\n      { id: 'Analytics', icon: <SettingsIcon /> },\n      { id: 'Performance', icon: <TimerIcon /> },\n      { id: 'Test Lab', icon: <PhonelinkSetupIcon /> },\n    ],\n  },\n];\n\nconst styles = (theme) => ({\n  categoryHeader: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  categoryHeaderPrimary: {\n    color: theme.palette.common.white,\n  },\n  item: {\n    paddingTop: 1,\n    paddingBottom: 1,\n    color: 'rgba(255, 255, 255, 0.7)',\n    '&:hover,&:focus': {\n      backgroundColor: 'rgba(255, 255, 255, 0.08)',\n    },\n  },\n  itemCategory: {\n    backgroundColor: '#232f3e',\n    boxShadow: '0 -1px 0 #404854 inset',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  firebase: {\n    fontSize: 24,\n    color: theme.palette.common.white,\n  },\n  itemActiveItem: {\n    color: '#4fc3f7',\n  },\n  itemPrimary: {\n    fontSize: 'inherit',\n  },\n  itemIcon: {\n    minWidth: 'auto',\n    marginRight: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n  },\n});\n\nfunction Navigator(props) {\n  const { classes, ...other } = props;\n\n  return (\n    <Drawer variant=\"permanent\" {...other}>\n      <List disablePadding>\n        <ListItem\n          className={clsx(classes.firebase, classes.item, classes.itemCategory)}\n        >\n          The Random Recruiter\n        </ListItem>\n        <ListItem className={clsx(classes.item, classes.itemCategory)}>\n          <ListItemIcon className={classes.itemIcon}>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText\n            classes={{\n              primary: classes.itemPrimary,\n            }}\n          >\n            Project Overview\n          </ListItemText>\n        </ListItem>\n        {categories.map(({ id, children }) => (\n          <React.Fragment key={id}>\n            <ListItem className={classes.categoryHeader}>\n              <ListItemText\n                classes={{\n                  primary: classes.categoryHeaderPrimary,\n                }}\n              >\n                {id}\n              </ListItemText>\n            </ListItem>\n            {children.map(({ id: childId, icon, active }) => (\n              <ListItem\n                key={childId}\n                button\n                className={clsx(classes.item, active && classes.itemActiveItem)}\n              >\n                <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\n                <ListItemText\n                  classes={{\n                    primary: classes.itemPrimary,\n                  }}\n                >\n                  {childId}\n                </ListItemText>\n              </ListItem>\n            ))}\n\n            <Divider className={classes.divider} />\n          </React.Fragment>\n        ))}\n      </List>\n    </Drawer>\n  );\n}\n\nNavigator.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Navigator);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteButton from '@material-ui/icons/Delete';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport FaceIcon from '@material-ui/icons/Face';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport { ListItemText } from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst styles = (theme) => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  searchBarColor: {\n    background: '#ffffff',\n    borderRadius: '8px',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  addUser: {\n    marginRight: theme.spacing(1),\n  },\n  contentWrapper: {\n    margin: '20px 16px',\n  },\n  jobCard: {\n    margin: theme.spacing(2),\n    background: '#e5f5fc',\n  },\n});\n\nconst sampleJob = {id: '1', name: 'An easy job', newApplicantName: '', applicants: [{id: '1', name: 'Foo', isHired: false}, {id: '2', name: 'Bar', isHired: false}]};\nconst hired = <span> (Hired!)</span>;\n\nfunction Content(props) {\n  const { classes } = props;\n\n  const [list, setList] = React.useState([sampleJob]);\n  const [jobName, setJobName] = React.useState('');\n  const [chosenOne, setChosenOne] = React.useState(-1);\n\n  function handleAddJob() {\n    if (jobName !== '') {\n      const newList = list.concat({ name: jobName, id: uuidv4(), newApplicantName: '', applicants: [] });\n      setList(newList);\n      setJobName('');\n    }\n  }\n\n  function handleRemoveJob(id) {\n    const newList = list.filter((item) => item.id !== id);\n    setList(newList);\n  }\n\n  function handleJobNameChange(event) {\n    setJobName(event.target.value);\n  }\n\n  function handleAddApplicant(jobId) {\n    const newList = list.map((item) => {\n      if (item.id === jobId && item.newApplicantName !== '') {\n        const updatedItem = {\n          ...item,\n          applicants: item.applicants.concat({name: item.newApplicantName, id: uuidv4(), isHired: false}),\n          newApplicantName: ''\n        };\n        return updatedItem;\n      }\n      return item;\n    });\n    setList(newList);\n  }\n\n  function handleRemoveApplicant(id, jobId) {\n    const newList = list.map((item) => {\n      if (item.id === jobId) {\n        const updatedItem = {\n          ...item,\n          applicants: item.applicants.filter((applicant) => applicant.id !== id),\n        };\n        return updatedItem;\n      }\n      return item;\n    });\n \n    setList(newList);\n  }\n\n  function handleApplicantNameChange(event, jobId) {\n    const newList = list.map((item) => {\n      if (item.id === jobId) {\n        const updatedItem = {\n          ...item,\n          newApplicantName: event.target.value\n        };\n        return updatedItem;\n      }\n      return item;\n    });\n    setList(newList);\n  }\n\n  function hire(jobId) {\n    const job = list.find(item => item.id === jobId);\n    const jobApplicants = job.applicants.length;\n    getLuckyNumber(jobApplicants)\n      .then((luckyNumber) => {\n        setChosenOne(luckyNumber);\n        applyChosenOne(luckyNumber, jobId)\n      });\n  }\n\n  function applyChosenOne(chosen, jobId) {\n    console.log('job: ' + jobId + ' > ' + chosen);\n    const newList = list.map((item) => {\n      if (item.id === jobId) {\n        const updatedItem = {\n          ...item,\n          applicants: item.applicants.map((applicant, index) => {\n              return {\n                ...applicant,\n                isHired: (index === chosen)\n              };\n          })\n        };\n        return updatedItem;\n      }\n      return item;\n    });\n    setList(newList);\n  }\n\n  function getLuckyNumber(applicantNumber) {\n    const max = applicantNumber - 1;\n    return fetch(`https://www.random.org/integers/?num=1&min=0&max=${max}&col=1&base=10&format=plain&rnd=new`)\n      .then(res => res.text())\n      .then(\n        (result) => {\n          console.log('For transparency reasons, the plain result was: ' + result);\n          var intResult = parseInt(result);\n          return intResult;\n        },\n        (error) => {\n          console.log(error);\n          return -2;\n        }\n      )\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <AppBar\n        className={classes.searchBar}\n        position=\"static\"\n        color=\"default\"\n        elevation={0}\n      >\n        <Toolbar>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <AssignmentIcon className={classes.block} color=\"inherit\" />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                fullWidth\n                placeholder=\"Job name\"\n                InputProps={{\n                  disableUnderline: true,\n                  className: classes.searchInput,\n                }}\n                value={jobName}\n                onChange={handleJobNameChange}\n              />\n            </Grid>\n            <Grid item>\n              <Button variant=\"contained\" className={classes.addUser} onClick={handleAddJob}>\n                Add Job\n              </Button>\n              <Tooltip title=\"Reload\">\n                <IconButton>\n                  <RefreshIcon className={classes.block} color=\"inherit\" />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.contentWrapper}>\n        {!list.length ? (\n          <Typography color=\"textSecondary\" align=\"center\">\n            No Jobs for this project yet\n          </Typography>) : (\n          <List>\n          {list.map(\n            (item) => (\n            <Card className={classes.jobCard} key={item.id}>\n              <CardContent>\n                <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\n                  {item.name}\n                </Typography>\n                <Toolbar className={classes.searchBarColor}>\n                  <Grid container spacing={2} alignItems=\"center\">\n                    <Grid item>\n                      <FaceIcon className={classes.block} color=\"inherit\" />\n                    </Grid>\n                    <Grid item xs>\n                      <TextField\n                        fullWidth\n                        placeholder=\"Applicant name\"\n                        InputProps={{\n                          disableUnderline: true,\n                          className: classes.searchInput,\n                        }}\n                        value={item.newApplicantName}\n                        onChange={(e) => handleApplicantNameChange(e, item.id)}\n                      />\n                    </Grid>\n                    <Grid item>\n                      <Button variant=\"contained\" className={classes.addUser} onClick={() => handleAddApplicant(item.id)}>\n                        Add Applicant\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Toolbar>\n                <List>\n                  {item.applicants.map(\n                    (applicant) => (\n                    <ListItem key={applicant.id}>\n                      <ListItemText>{applicant.name}{applicant.isHired? hired : null}</ListItemText>\n                      <IconButton aria-label=\"delete\" onClick={() => handleRemoveApplicant(applicant.id, item.id)}>\n                        <DeleteButton />\n                      </IconButton>\n                    </ListItem>\n                  ))}\n                </List>\n              </CardContent>\n              <CardActions>\n                <IconButton aria-label=\"delete\" onClick={() => handleRemoveJob(item.id)}>\n                  <DeleteButton />\n                </IconButton>\n                {/* <Button size=\"small\" aria-label=\"delete\" onClick={() => handleRemoveJob(item.id)}>Remove Job</Button> */}\n                <Button size=\"large\" aria-label=\"assign\" onClick={() => hire(item.id)}>HIRE!</Button>\n              </CardActions>\n            </Card>\n              )\n            )}\n          </List>\n            )}\n      </div>\n    </Paper>\n  );\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Content);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\r\n\r\nconst styles = (theme) => ({\r\n  secondaryBar: {\r\n    zIndex: 0,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -theme.spacing(1),\r\n  },\r\n  iconButtonAvatar: {\r\n    padding: 4,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: lightColor,\r\n    '&:hover': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  button: {\r\n    borderColor: lightColor,\r\n  },\r\n});\r\n\r\nfunction Header(props) {\r\n  const { classes, onDrawerToggle } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={1} alignItems=\"center\">\r\n            <Hidden smUp>\r\n              <Grid item>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={onDrawerToggle}\r\n                  className={classes.menuButton}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item xs />\r\n            <Grid item>\r\n              <Link className={classes.link} href=\"#\" variant=\"body2\">\r\n                Go to docs\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Tooltip title=\"Alerts • No alerts\">\r\n                <IconButton color=\"inherit\">\r\n                  <NotificationsIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\r\n                <Avatar src=\"/static/images/avatar/1.jpg\" alt=\"My Avatar\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Toolbar>\r\n          <Grid container alignItems=\"center\" spacing={1}>\r\n            <Grid item xs>\r\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                Authentication\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"outlined\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n              >\r\n                Web setup\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Tooltip title=\"Help\">\r\n                <IconButton color=\"inherit\">\r\n                  <HelpIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Tabs value={0} textColor=\"inherit\">\r\n          <Tab label=\"Users\" />\r\n          <Tab label=\"Sign-in method\" />\r\n          <Tab label=\"Templates\" />\r\n          <Tab label=\"Usage\" />\r\n        </Tabs>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onDrawerToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  withStyles,\n} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Hidden from '@material-ui/core/Hidden';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Navigator from './Navigator';\nimport Content from './Content';\nimport Header from './Header';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n      Random Recruiter\n      </Link>{' '}\n      {new Date().getFullYear()}.\n    </Typography>\n  );\n}\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#63ccff',\n      main: '#009be5',\n      dark: '#006db3',\n    },\n  },\n  typography: {\n    h5: {\n      fontWeight: 500,\n      fontSize: 26,\n      letterSpacing: 0.5,\n    },\n  },\n  shape: {\n    borderRadius: 8,\n  },\n  props: {\n    MuiTab: {\n      disableRipple: true,\n    },\n  },\n  mixins: {\n    toolbar: {\n      minHeight: 48,\n    },\n  },\n});\n\ntheme = {\n  ...theme,\n  overrides: {\n    MuiDrawer: {\n      paper: {\n        backgroundColor: '#18202c',\n      },\n    },\n    MuiButton: {\n      label: {\n        textTransform: 'none',\n      },\n      contained: {\n        boxShadow: 'none',\n        '&:active': {\n          boxShadow: 'none',\n        },\n      },\n    },\n    MuiTabs: {\n      root: {\n        marginLeft: theme.spacing(1),\n      },\n      indicator: {\n        height: 3,\n        borderTopLeftRadius: 3,\n        borderTopRightRadius: 3,\n        backgroundColor: theme.palette.common.white,\n      },\n    },\n    MuiTab: {\n      root: {\n        textTransform: 'none',\n        margin: '0 16px',\n        minWidth: 0,\n        padding: 0,\n        [theme.breakpoints.up('md')]: {\n          padding: 0,\n          minWidth: 0,\n        },\n      },\n    },\n    MuiIconButton: {\n      root: {\n        padding: theme.spacing(1),\n      },\n    },\n    MuiTooltip: {\n      tooltip: {\n        borderRadius: 4,\n      },\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: '#404854',\n      },\n    },\n    MuiListItemText: {\n      primary: {\n        fontWeight: theme.typography.fontWeightMedium,\n      },\n    },\n    MuiListItemIcon: {\n      root: {\n        color: 'inherit',\n        marginRight: 0,\n        '& svg': {\n          fontSize: 20,\n        },\n      },\n    },\n    MuiAvatar: {\n      root: {\n        width: 32,\n        height: 32,\n      },\n    },\n  },\n};\n\nconst drawerWidth = 256;\n\nconst styles = {\n  root: {\n    display: 'flex',\n    minHeight: '100vh',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  app: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  main: {\n    flex: 1,\n    padding: theme.spacing(6, 4),\n    background: '#eaeff1',\n  },\n  footer: {\n    padding: theme.spacing(2),\n    background: '#eaeff1',\n  },\n};\n\nfunction Paperbase(props) {\n  const { classes } = props;\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <nav className={classes.drawer}>\n          <Hidden smUp implementation=\"js\">\n            <Navigator\n              PaperProps={{ style: { width: drawerWidth } }}\n              variant=\"temporary\"\n              open={mobileOpen}\n              onClose={handleDrawerToggle}\n            />\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Navigator PaperProps={{ style: { width: drawerWidth } }} />\n          </Hidden>\n        </nav>\n        <div className={classes.app}>\n          <Header onDrawerToggle={handleDrawerToggle} />\n          <main className={classes.main}>\n            <Content />\n          </main>\n          <footer className={classes.footer}>\n            <Copyright />\n          </footer>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nPaperbase.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Paperbase);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Paperbase from './Paperbase';\r\n\r\nReactDOM.render(<Paperbase />, document.querySelector(\"#root\"));"],"sourceRoot":""}