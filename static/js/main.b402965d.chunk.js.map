{"version":3,"sources":["Navigator.js","Content.js","Header.js","Paperbase.js","index.js"],"names":["categories","id","children","icon","active","withStyles","theme","categoryHeader","paddingTop","spacing","paddingBottom","categoryHeaderPrimary","color","palette","common","white","item","backgroundColor","itemCategory","boxShadow","firebase","fontSize","itemActiveItem","itemPrimary","itemIcon","minWidth","marginRight","divider","marginTop","props","classes","other","Drawer","variant","List","disablePadding","ListItem","className","clsx","ListItemIcon","ListItemText","primary","map","Fragment","key","childId","button","Divider","sampleJob","name","newApplicantName","applicants","isHired","hired","JobCards","jobs","onApplicantNameChange","onApplicantAdd","onApplicantRemove","onRemove","onHiring","length","job","Card","jobCard","CardContent","Typography","gutterBottom","AddApplicant","value","onChange","onAdd","jobId","contentWrapper","ApplicantList","CardActions","IconButton","aria-label","onClick","Button","size","align","applicant","Toolbar","searchBarColor","Grid","container","alignItems","block","xs","TextField","fullWidth","placeholder","InputProps","disableUnderline","searchInput","e","addUser","paper","maxWidth","margin","overflow","searchBar","borderBottom","background","borderRadius","typography","display","React","useState","list","setList","jobName","setJobName","Paper","AppBar","position","elevation","event","target","newList","concat","uuidv4","newApplicant","filter","applicantNumber","jobApplicants","find","fetch","then","res","text","result","console","log","parseInt","error","luckyNumber","chosen","updatedApplicants","index","applyChosenOne","secondaryBar","zIndex","menuButton","marginLeft","iconButtonAvatar","padding","link","textDecoration","borderColor","onDrawerToggle","Hidden","smUp","Link","href","Tooltip","title","Avatar","src","alt","component","Tabs","textColor","Tab","label","Copyright","Date","getFullYear","createMuiTheme","light","main","dark","h5","fontWeight","letterSpacing","shape","MuiTab","disableRipple","mixins","toolbar","minHeight","overrides","MuiDrawer","MuiButton","textTransform","contained","MuiTabs","root","indicator","height","borderTopLeftRadius","borderTopRightRadius","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","fontWeightMedium","MuiListItemIcon","MuiAvatar","width","styles","drawer","flexShrink","app","flex","flexDirection","footer","mobileOpen","setMobileOpen","handleDrawerToggle","ThemeProvider","CssBaseline","implementation","PaperProps","style","open","onClose","xsDown","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b402965d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PeopleIcon from '@material-ui/icons/People';\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\nimport PermMediaOutlinedIcon from '@material-ui/icons/PhotoSizeSelectActual';\nimport PublicIcon from '@material-ui/icons/Public';\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PhonelinkSetupIcon from '@material-ui/icons/PhonelinkSetup';\n\nconst categories = [\n  {\n    id: 'Develop',\n    children: [\n      {\n        id: 'Authentication',\n        icon: <PeopleIcon />,\n        active: true,\n      },\n      { id: 'Database', icon: <DnsRoundedIcon /> },\n      { id: 'Storage', icon: <PermMediaOutlinedIcon /> },\n      { id: 'Hosting', icon: <PublicIcon /> },\n      { id: 'Functions', icon: <SettingsEthernetIcon /> },\n      {\n        id: 'ML Kit',\n        icon: <SettingsInputComponentIcon />,\n      },\n    ],\n  },\n  {\n    id: 'Quality',\n    children: [\n      { id: 'Analytics', icon: <SettingsIcon /> },\n      { id: 'Performance', icon: <TimerIcon /> },\n      { id: 'Test Lab', icon: <PhonelinkSetupIcon /> },\n    ],\n  },\n];\n\nconst styles = (theme) => ({\n  categoryHeader: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  categoryHeaderPrimary: {\n    color: theme.palette.common.white,\n  },\n  item: {\n    paddingTop: 1,\n    paddingBottom: 1,\n    color: 'rgba(255, 255, 255, 0.7)',\n    '&:hover,&:focus': {\n      backgroundColor: 'rgba(255, 255, 255, 0.08)',\n    },\n  },\n  itemCategory: {\n    backgroundColor: '#232f3e',\n    boxShadow: '0 -1px 0 #404854 inset',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  firebase: {\n    fontSize: 24,\n    color: theme.palette.common.white,\n  },\n  itemActiveItem: {\n    color: '#4fc3f7',\n  },\n  itemPrimary: {\n    fontSize: 'inherit',\n  },\n  itemIcon: {\n    minWidth: 'auto',\n    marginRight: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n  },\n});\n\nfunction Navigator(props) {\n  const { classes, ...other } = props;\n\n  return (\n    <Drawer variant=\"permanent\" {...other}>\n      <List disablePadding>\n        <ListItem\n          className={clsx(classes.firebase, classes.item, classes.itemCategory)}\n        >\n          The Random Recruiter\n        </ListItem>\n        <ListItem className={clsx(classes.item, classes.itemCategory)}>\n          <ListItemIcon className={classes.itemIcon}>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText\n            classes={{\n              primary: classes.itemPrimary,\n            }}\n          >\n            Project Overview\n          </ListItemText>\n        </ListItem>\n        {categories.map(({ id, children }) => (\n          <React.Fragment key={id}>\n            <ListItem className={classes.categoryHeader}>\n              <ListItemText\n                classes={{\n                  primary: classes.categoryHeaderPrimary,\n                }}\n              >\n                {id}\n              </ListItemText>\n            </ListItem>\n            {children.map(({ id: childId, icon, active }) => (\n              <ListItem\n                key={childId}\n                button\n                className={clsx(classes.item, active && classes.itemActiveItem)}\n              >\n                <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\n                <ListItemText\n                  classes={{\n                    primary: classes.itemPrimary,\n                  }}\n                >\n                  {childId}\n                </ListItemText>\n              </ListItem>\n            ))}\n\n            <Divider className={classes.divider} />\n          </React.Fragment>\n        ))}\n      </List>\n    </Drawer>\n  );\n}\n\nNavigator.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Navigator);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport DeleteButton from '@material-ui/icons/Delete';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport FaceIcon from '@material-ui/icons/Face';\n\nconst styles = (theme) => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  searchBarColor: {\n    background: '#ffffff',\n    borderRadius: '8px',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  addUser: {\n    marginRight: theme.spacing(1),\n  },\n  contentWrapper: {\n    margin: '20px 16px',\n  },\n  jobCard: {\n    margin: theme.spacing(2),\n    background: '#e5f5fc',\n  },\n});\n\nconst sampleJob = {\n  id: '1',\n  name: 'An easy job',\n  newApplicantName: '',\n  applicants: [\n    {\n      id: '1',\n      name: 'Foo',\n      isHired: false\n    },\n    {\n      id: '2',\n      name: 'Bar',\n      isHired: false\n    }\n  ]\n};\n\nconst hired = <span> (Hired!)</span>;\n\nfunction Content(props) {\n  const { classes } = props;\n\n  const [list, setList] = React.useState([sampleJob]);\n  const [jobName, setJobName] = React.useState('');\n\n  function handleAddJob() {\n    if (jobName !== '') {\n      const newList = list.concat({ name: jobName, id: uuidv4(), newApplicantName: '', applicants: [] });\n      setList(newList);\n      setJobName('');\n    }\n  }\n\n  function handleRemoveJob(id) {\n    const newList = list.filter((item) => item.id !== id);\n    setList(newList);\n  }\n\n  function handleJobNameChange(event) {\n    setJobName(event.target.value);\n  }\n\n  function handleAddApplicant(jobId) {\n    const newList = list.map((item) => {\n      if (item.id === jobId && item.newApplicantName !== '') {\n        const newApplicant = {\n          id: uuidv4(),\n          name: item.newApplicantName,\n          isHired: false\n        };\n        return {\n          ...item,\n          applicants: item.applicants.concat(newApplicant),\n          newApplicantName: ''\n        };\n      }\n      return item;\n    });\n    setList(newList);\n  }\n\n  function handleRemoveApplicant(id, jobId) {\n    const newList = list.map((item) => {\n      if (item.id === jobId) {\n        return {\n          ...item,\n          applicants: item.applicants.filter((applicant) => applicant.id !== id),\n        };\n      }\n      return item;\n    });\n\n    setList(newList);\n  }\n\n  function handleApplicantNameChange(event, jobId) {\n    const newList = list.map((item) => {\n      if (item.id === jobId) {\n        return {\n          ...item,\n          newApplicantName: event.target.value\n        };\n      }\n      return item;\n    });\n    setList(newList);\n  }\n\n  function hire(jobId) {\n    const job = list.find(item => item.id === jobId);\n    const jobApplicants = job.applicants.length;\n    getLuckyNumber(jobApplicants)\n      .then((luckyNumber) => {\n        applyChosenOne(luckyNumber, jobId)\n      });\n  }\n\n  function applyChosenOne(chosen, jobId) {\n    console.log('job: ' + jobId + ' > ' + chosen);\n    const newList = list.map((item) => {\n      if (item.id === jobId) {\n        const updatedApplicants = item.applicants.map((applicant, index) => {\n          return {\n            ...applicant,\n            isHired: (index === chosen)\n          };\n        });\n        return {\n          ...item,\n          applicants: updatedApplicants\n        };\n      }\n      return item;\n    });\n    setList(newList);\n  }\n\n  function getLuckyNumber(applicantNumber) {\n    const max = applicantNumber - 1;\n    return fetch(`https://www.random.org/integers/?num=1&min=0&max=${max}&col=1&base=10&format=plain&rnd=new`)\n      .then(res => res.text())\n      .then(\n        (result) => {\n          console.log('For transparency reasons, the plain result was: ' + result);\n          var intResult = parseInt(result);\n          return intResult;\n        },\n        (error) => {\n          console.log(error);\n          return -2;\n        }\n      )\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      <AppBar\n        className={classes.searchBar}\n        position=\"static\"\n        color=\"default\"\n        elevation={0}\n      >\n        <Toolbar>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <AssignmentIcon className={classes.block} color=\"inherit\" />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                fullWidth\n                placeholder=\"Job name\"\n                InputProps={{\n                  disableUnderline: true,\n                  className: classes.searchInput,\n                }}\n                value={jobName}\n                onChange={handleJobNameChange}\n              />\n            </Grid>\n            <Grid item>\n              <Button variant=\"contained\" className={classes.addUser} onClick={handleAddJob}>\n                Add Job\n              </Button>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.contentWrapper}>\n        <JobCards\n          jobs={list}\n          onApplicantNameChange={handleApplicantNameChange}\n          onApplicantAdd={handleAddApplicant}\n          onApplicantRemove={handleRemoveApplicant}\n          onRemove={handleRemoveJob}\n          onHiring={hire}\n          classes={classes}\n        />\n      </div>\n    </Paper>\n  );\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nfunction JobCards(props) {\n  const { jobs, classes, onApplicantNameChange, onApplicantAdd, onApplicantRemove, onRemove, onHiring } = props\n\n  if (!jobs.length) {\n    return (\n      <Typography color=\"textSecondary\" align=\"center\">\n        No Jobs for this project yet\n      </Typography>);\n  }\n\n  return (\n    <List>\n      {jobs.map(\n        (job) => (\n          <Card className={classes.jobCard} key={job.id}>\n            <CardContent>\n              <Typography variant='h5' color=\"textPrimary\" gutterBottom>\n                {job.name}\n              </Typography>\n              <AddApplicant value={job.newApplicantName} onChange={onApplicantNameChange} onAdd={onApplicantAdd} jobId={job.id} classes={classes} />\n              <div className={classes.contentWrapper}>\n                <ApplicantList applicants={job.applicants} jobId={job.id} onRemove={onApplicantRemove} />\n              </div>\n            </CardContent>\n            <CardActions>\n              <IconButton aria-label=\"delete\" onClick={() => onRemove(job.id)}>\n                <DeleteButton />\n              </IconButton>\n              <Button size=\"large\" aria-label=\"assign\" onClick={() => onHiring(job.id)}>HIRE!</Button>\n            </CardActions>\n          </Card>\n        )\n      )}\n    </List>\n  );\n}\n\nfunction ApplicantList({ applicants, jobId, onRemove }) {\n  if (!applicants.length) {\n    return (\n      <Typography color=\"textSecondary\" align=\"center\">\n        No Applicants for this project yet\n      </Typography>\n    )\n  }\n\n  return (\n    <List>\n      {applicants.map(\n        (applicant) => (\n          <ListItem key={applicant.id}>\n            <ListItemText>{applicant.name}{applicant.isHired ? hired : null}</ListItemText>\n            <IconButton aria-label=\"delete\" onClick={() => onRemove(applicant.id, jobId)}>\n              <DeleteButton />\n            </IconButton>\n          </ListItem>\n        ))}\n    </List>\n  )\n}\n\nfunction AddApplicant({ value, onChange, onAdd, jobId, classes }) {\n  return (\n    <Toolbar className={classes.searchBarColor}>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item>\n          <FaceIcon className={classes.block} color=\"inherit\" />\n        </Grid>\n        <Grid item xs>\n          <TextField\n            fullWidth\n            placeholder=\"Applicant name\"\n            InputProps={{\n              disableUnderline: true,\n              className: classes.searchInput,\n            }}\n            value={value}\n            onChange={(e) => onChange(e, jobId)}\n          />\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" className={classes.addUser} onClick={() => onAdd(jobId)}>\n            Add Applicant\n        </Button>\n        </Grid>\n      </Grid>\n    </Toolbar>\n  );\n}\n\nexport default withStyles(styles)(Content);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\r\n\r\nconst styles = (theme) => ({\r\n  secondaryBar: {\r\n    zIndex: 0,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -theme.spacing(1),\r\n  },\r\n  iconButtonAvatar: {\r\n    padding: 4,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: lightColor,\r\n    '&:hover': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  button: {\r\n    borderColor: lightColor,\r\n  },\r\n});\r\n\r\nfunction Header(props) {\r\n  const { classes, onDrawerToggle } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={1} alignItems=\"center\">\r\n            <Hidden smUp>\r\n              <Grid item>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={onDrawerToggle}\r\n                  className={classes.menuButton}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item xs />\r\n            <Grid item>\r\n              <Link className={classes.link} href=\"#\" variant=\"body2\">\r\n                Go to docs\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Tooltip title=\"Alerts • No alerts\">\r\n                <IconButton color=\"inherit\">\r\n                  <NotificationsIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\r\n                <Avatar src=\"/static/images/avatar/1.jpg\" alt=\"My Avatar\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Toolbar>\r\n          <Grid container alignItems=\"center\" spacing={1}>\r\n            <Grid item xs>\r\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                Authentication\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"outlined\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n              >\r\n                Web setup\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Tooltip title=\"Help\">\r\n                <IconButton color=\"inherit\">\r\n                  <HelpIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Tabs value={0} textColor=\"inherit\">\r\n          <Tab label=\"Users\" />\r\n          <Tab label=\"Sign-in method\" />\r\n          <Tab label=\"Templates\" />\r\n          <Tab label=\"Usage\" />\r\n        </Tabs>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onDrawerToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  withStyles,\n} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Hidden from '@material-ui/core/Hidden';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Navigator from './Navigator';\nimport Content from './Content';\nimport Header from './Header';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n      Random Recruiter\n      </Link>{' '}\n      {new Date().getFullYear()}.\n    </Typography>\n  );\n}\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#63ccff',\n      main: '#009be5',\n      dark: '#006db3',\n    },\n  },\n  typography: {\n    h5: {\n      fontWeight: 500,\n      fontSize: 26,\n      letterSpacing: 0.5,\n    },\n  },\n  shape: {\n    borderRadius: 8,\n  },\n  props: {\n    MuiTab: {\n      disableRipple: true,\n    },\n  },\n  mixins: {\n    toolbar: {\n      minHeight: 48,\n    },\n  },\n});\n\ntheme = {\n  ...theme,\n  overrides: {\n    MuiDrawer: {\n      paper: {\n        backgroundColor: '#18202c',\n      },\n    },\n    MuiButton: {\n      label: {\n        textTransform: 'none',\n      },\n      contained: {\n        boxShadow: 'none',\n        '&:active': {\n          boxShadow: 'none',\n        },\n      },\n    },\n    MuiTabs: {\n      root: {\n        marginLeft: theme.spacing(1),\n      },\n      indicator: {\n        height: 3,\n        borderTopLeftRadius: 3,\n        borderTopRightRadius: 3,\n        backgroundColor: theme.palette.common.white,\n      },\n    },\n    MuiTab: {\n      root: {\n        textTransform: 'none',\n        margin: '0 16px',\n        minWidth: 0,\n        padding: 0,\n        [theme.breakpoints.up('md')]: {\n          padding: 0,\n          minWidth: 0,\n        },\n      },\n    },\n    MuiIconButton: {\n      root: {\n        padding: theme.spacing(1),\n      },\n    },\n    MuiTooltip: {\n      tooltip: {\n        borderRadius: 4,\n      },\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: '#404854',\n      },\n    },\n    MuiListItemText: {\n      primary: {\n        fontWeight: theme.typography.fontWeightMedium,\n      },\n    },\n    MuiListItemIcon: {\n      root: {\n        color: 'inherit',\n        marginRight: 0,\n        '& svg': {\n          fontSize: 20,\n        },\n      },\n    },\n    MuiAvatar: {\n      root: {\n        width: 32,\n        height: 32,\n      },\n    },\n  },\n};\n\nconst drawerWidth = 256;\n\nconst styles = {\n  root: {\n    display: 'flex',\n    minHeight: '100vh',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  app: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  main: {\n    flex: 1,\n    padding: theme.spacing(6, 4),\n    background: '#eaeff1',\n  },\n  footer: {\n    padding: theme.spacing(2),\n    background: '#eaeff1',\n  },\n};\n\nfunction Paperbase(props) {\n  const { classes } = props;\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <nav className={classes.drawer}>\n          <Hidden smUp implementation=\"js\">\n            <Navigator\n              PaperProps={{ style: { width: drawerWidth } }}\n              variant=\"temporary\"\n              open={mobileOpen}\n              onClose={handleDrawerToggle}\n            />\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Navigator PaperProps={{ style: { width: drawerWidth } }} />\n          </Hidden>\n        </nav>\n        <div className={classes.app}>\n          <Header onDrawerToggle={handleDrawerToggle} />\n          <main className={classes.main}>\n            <Content />\n          </main>\n          <footer className={classes.footer}>\n            <Copyright />\n          </footer>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nPaperbase.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Paperbase);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Paperbase from './Paperbase';\r\n\r\nReactDOM.render(<Paperbase />, document.querySelector(\"#root\"));"],"sourceRoot":""}